import React, { useState } from "react";
import "./StudentSelector.css";

const StudentSelector = ({ classData, allLearners, onClose, onUpdate }) => {
  const [selectedStudents, setSelectedStudents] = useState(
    classData.enrolledStudents || []
  );
  const [searchTerm, setSearchTerm] = useState("");

  // L·ªçc h·ªçc vi√™n theo t·ª´ kh√≥a t√¨m ki·∫øm
  const filteredLearners = allLearners.filter(
    (learner) =>
      learner.fullName.toLowerCase().includes(searchTerm.toLowerCase()) ||
      learner.email.toLowerCase().includes(searchTerm.toLowerCase()) ||
      learner.phone.includes(searchTerm)
  );

  const isStudentEnrolled = (studentId) => {
    return selectedStudents.includes(studentId);
  };

  const handleToggleStudent = (studentId) => {
    if (isStudentEnrolled(studentId)) {
      // X√≥a h·ªçc vi√™n
      setSelectedStudents((prev) => prev.filter((id) => id !== studentId));
    } else {
      // Th√™m h·ªçc vi√™n
      if (selectedStudents.length >= classData.maxStudents) {
        alert(
          `‚ö†Ô∏è L·ªõp h·ªçc ƒë√£ ƒë·∫°t sƒ© s·ªë t·ªëi ƒëa (${classData.maxStudents} h·ªçc vi√™n)!`
        );
        return;
      }
      setSelectedStudents((prev) => [...prev, studentId]);
    }
  };

  const handleSave = () => {
    onUpdate(selectedStudents);
  };

  const enrolledLearners = allLearners.filter((l) =>
    selectedStudents.includes(l.id)
  );
  const availableLearners = filteredLearners.filter(
    (l) => !selectedStudents.includes(l.id)
  );

  return (
    <div className="student-selector-overlay">
      <div className="student-selector-container">
        <div className="selector-header">
          <div>
            <h2>üë• Qu·∫£n l√Ω h·ªçc vi√™n</h2>
            <p className="class-name">{classData.title}</p>
          </div>
          <button className="close-btn" onClick={onClose} title="ƒê√≥ng">
            ‚úï
          </button>
        </div>

        <div className="selector-body">
          <div className="student-stats">
            <div className="stat-item">
              <span className="stat-value">{selectedStudents.length}</span>
              <span className="stat-label">ƒê√£ ghi danh</span>
            </div>
            <div className="stat-divider">/</div>
            <div className="stat-item">
              <span className="stat-value">{classData.maxStudents}</span>
              <span className="stat-label">Sƒ© s·ªë t·ªëi ƒëa</span>
            </div>
            <div className="stat-item">
              <span className="stat-value">
                {classData.maxStudents - selectedStudents.length}
              </span>
              <span className="stat-label">C√≤n l·∫°i</span>
            </div>
          </div>

          <div className="search-section">
            <input
              type="text"
              className="search-input"
              placeholder="üîç T√¨m ki·∫øm h·ªçc vi√™n (t√™n, email, s·ªë ƒëi·ªán tho·∫°i)..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
            />
          </div>

          <div className="students-sections">
            {/* H·ªçc vi√™n ƒë√£ ghi danh */}
            <div className="students-section">
              <h3 className="section-title">
                ‚úÖ ƒê√£ ghi danh ({enrolledLearners.length})
              </h3>
              {enrolledLearners.length > 0 ? (
                <div className="students-list">
                  {enrolledLearners.map((learner) => (
                    <div key={learner.id} className="student-card enrolled">
                      <div className="student-info">
                        <div className="student-avatar">
                          {learner.fullName.charAt(0)}
                        </div>
                        <div className="student-details">
                          <div className="student-name">{learner.fullName}</div>
                          <div className="student-contact">
                            üìß {learner.email}
                          </div>
                          <div className="student-contact">
                            üì± {learner.phone}
                          </div>
                        </div>
                      </div>
                      <button
                        className="btn-remove"
                        onClick={() => handleToggleStudent(learner.id)}
                        title="X√≥a kh·ªèi l·ªõp"
                      >
                        ‚ûñ X√≥a
                      </button>
                    </div>
                  ))}
                </div>
              ) : (
                <div className="empty-section">
                  <p>Ch∆∞a c√≥ h·ªçc vi√™n n√†o ghi danh</p>
                </div>
              )}
            </div>

            {/* H·ªçc vi√™n c√≥ s·∫µn */}
            <div className="students-section">
              <h3 className="section-title">
                ‚ûï H·ªçc vi√™n c√≥ th·ªÉ th√™m ({availableLearners.length})
              </h3>
              {availableLearners.length > 0 ? (
                <div className="students-list">
                  {availableLearners.map((learner) => (
                    <div key={learner.id} className="student-card available">
                      <div className="student-info">
                        <div className="student-avatar">
                          {learner.fullName.charAt(0)}
                        </div>
                        <div className="student-details">
                          <div className="student-name">{learner.fullName}</div>
                          <div className="student-contact">
                            üìß {learner.email}
                          </div>
                          <div className="student-contact">
                            üì± {learner.phone}
                          </div>
                        </div>
                      </div>
                      <button
                        className="btn-add"
                        onClick={() => handleToggleStudent(learner.id)}
                        title="Th√™m v√†o l·ªõp"
                        disabled={
                          selectedStudents.length >= classData.maxStudents
                        }
                      >
                        ‚ûï Th√™m
                      </button>
                    </div>
                  ))}
                </div>
              ) : (
                <div className="empty-section">
                  <p>
                    {searchTerm
                      ? "Kh√¥ng t√¨m th·∫•y h·ªçc vi√™n"
                      : "Kh√¥ng c√≥ h·ªçc vi√™n n√†o kh·∫£ d·ª•ng"}
                  </p>
                </div>
              )}
            </div>
          </div>
        </div>

        <div className="selector-footer">
          <button className="btn btn-secondary" onClick={onClose}>
            ‚ùå H·ªßy
          </button>
          <button className="btn btn-primary" onClick={handleSave}>
            ‚úÖ L∆∞u thay ƒë·ªïi
          </button>
        </div>
      </div>
    </div>
  );
};

export default StudentSelector;

